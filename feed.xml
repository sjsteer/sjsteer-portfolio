<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2022-12-12T00:02:11+00:00</updated><id>/feed.xml</id><title type="html">shaynesteer.me</title><subtitle></subtitle><author><name>Shayne Steer</name><email>shaynesteer@gmail.com</email></author><entry><title type="html">VegaLite CourseWork</title><link href="/projects/2021/09/26/vegalite.html" rel="alternate" type="text/html" title="VegaLite CourseWork" /><published>2021-09-26T12:00:00+00:00</published><updated>2021-09-26T12:00:00+00:00</updated><id>/projects/2021/09/26/vegalite</id><content type="html" xml:base="/projects/2021/09/26/vegalite.html">&lt;p&gt;Following on from my previous post, my next assignment for FIT3179 Data Viz at Monash University was a similar project. For this project, I investigated the uptake of solar energy in Australia.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../renewable-energy.png&quot; height=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This project was my first exposure to client side data visualization, through the &lt;a href=&quot;https://vega.github.io/vega-lite/&quot;&gt;Vega-Lite&lt;/a&gt; and &lt;a href=&quot;https://d3js.org/&quot;&gt;d3.js&lt;/a&gt; libraries. The source code for this project is available &lt;a href=&quot;https://github.com/sjsteer/FIT3179-Assignment2&quot;&gt;here&lt;/a&gt; and the live-copy of the visualization &lt;a href=&quot;https://sjsteer.github.io/FIT3179-Assignment2/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name>Shayne Steer</name><email>shaynesteer@gmail.com</email></author><category term="projects" /><summary type="html">Following on from my previous post, my next assignment for FIT3179 Data Viz at Monash University was a similar project. For this project, I investigated the uptake of solar energy in Australia.</summary></entry><entry><title type="html">Tableau Coursework</title><link href="/projects/2021/09/05/tableau-coursework.html" rel="alternate" type="text/html" title="Tableau Coursework" /><published>2021-09-05T12:00:00+00:00</published><updated>2021-09-05T12:00:00+00:00</updated><id>/projects/2021/09/05/tableau-coursework</id><content type="html" xml:base="/projects/2021/09/05/tableau-coursework.html">&lt;p&gt;During the second semester of 2021, I had the pleasure of learning how to use Tableau as part of my Data Science coursework. In this unit’s major assignment, I was required to produce a dashboard which would deliver information in a visually interesting way, aimed at Australian readers.&lt;/p&gt;

&lt;p&gt;My topic of choice was the “History of Olympic Swimming”. Swimming is one of four sports present at every modern Olympic Games, meaning there is wealth of information available. However, the dataset used required some grouping and aggregation to avoid “double counting” of medals, due to the granularity of the data. These changes were implemented using the pandas package in Python. Within the visualization, there is a focus on changes in gender and nationalities, most successful nations and individual athletes, and how the average athlete has changed.&lt;/p&gt;

&lt;p&gt;Below are some hightlights of the visualization:&lt;br /&gt;
&lt;img src=&quot;/../olympics_viz2.png&quot; height=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Overall, I am quite proud of how it came together, and I can’t wait to use Tableau for my personal projects. In future, I will likely upgrade to a premium Tableau account, and implement data connectors to allow for flexible reporting.&lt;/p&gt;

&lt;p&gt;Click &lt;a href=&quot;https://public.tableau.com/app/profile/shayne.steer/viz/FIT3179Assignment1-HistoryofOlympicSwimmingShayneSteer/Dashboard1?publish=yes&quot;&gt;here&lt;/a&gt; to explore my visualization.&lt;/p&gt;</content><author><name>Shayne Steer</name><email>shaynesteer@gmail.com</email></author><category term="projects" /><summary type="html">During the second semester of 2021, I had the pleasure of learning how to use Tableau as part of my Data Science coursework. In this unit’s major assignment, I was required to produce a dashboard which would deliver information in a visually interesting way, aimed at Australian readers.</summary></entry><entry><title type="html">Hottest 100 On Record</title><link href="/projects/2021/01/23/hottest100.html" rel="alternate" type="text/html" title="Hottest 100 On Record" /><published>2021-01-23T12:00:00+00:00</published><updated>2021-01-23T12:00:00+00:00</updated><id>/projects/2021/01/23/hottest100</id><content type="html" xml:base="/projects/2021/01/23/hottest100.html">&lt;p&gt;As an avid listener of Triple J and their annual Hottest 100, I set out to scrape open data in order to ‘predict’ the Hottest 100.&lt;/p&gt;

&lt;p&gt;This project used the &lt;a href=&quot;https://github.com/plamere/spotipy&quot;&gt;spotipy&lt;/a&gt; library to scrape for playlists matching the search query ‘triple j hottest 100 2020’ which is automatically generated when authenticating through the Triple J app with Spotify. With this in mind, we were able to aggregate ‘votes’ for the Hottest 100.&lt;/p&gt;

&lt;p&gt;Despite the challenges of writing efficient web-ready code, I believe this project served as a great learning exercise for a ‘full stack project’.&lt;/p&gt;

&lt;p&gt;Another technology used, namely tinydb, was used for persistent storage of voting data allowing Realtime in-memory caching.&lt;/p&gt;

&lt;p&gt;Finally, the option for the user to login with Spotify (through OAuth 2.0) was implemented to allow the streaming of songs and adding them to the users personal collection. By implementing this, I can successfully say that I am more confident with OAuth and look forward to using it in further projects.&lt;/p&gt;

&lt;p&gt;Special thanks to &lt;a href=&quot;https://github.com/jcspencer&quot;&gt;James Spencer&lt;/a&gt; for working together on the project. This was my first real exposure to working alongside another developer, and allowed me to appreciate working in a team environment.&lt;/p&gt;

&lt;p&gt;Click &lt;a href=&quot;https://hottest100.jcspencer.net/&quot;&gt;here&lt;/a&gt; to visit the site and explore our predictions. The site is currently frozen, however as voting begins in late 2021 we will re-enable the site and begin the aggregation process once more.&lt;/p&gt;</content><author><name>Shayne Steer</name><email>shaynesteer@gmail.com</email></author><category term="projects" /><summary type="html">As an avid listener of Triple J and their annual Hottest 100, I set out to scrape open data in order to ‘predict’ the Hottest 100.</summary></entry><entry><title type="html">Victoria COVID-19 Plot</title><link href="/projects/2020/11/12/victoria-covid-19.html" rel="alternate" type="text/html" title="Victoria COVID-19 Plot" /><published>2020-11-12T21:00:00+00:00</published><updated>2020-11-12T21:00:00+00:00</updated><id>/projects/2020/11/12/victoria-covid-19</id><content type="html" xml:base="/projects/2020/11/12/victoria-covid-19.html">&lt;p&gt;Below is a project that I have been working on to plot various datapoints from the Victorian COVID-19.&lt;/p&gt;

&lt;p&gt;This script scrapes from &lt;a href=&quot;https://covidlive.com.au/&quot;&gt;COVID LIVE&lt;/a&gt; automatically every morning at 10AM AEDT, and plots daily net cases and rolling average.&lt;/p&gt;

&lt;p&gt;I initially started this project to work on test the data science skills (scraping, cleaning and visualising) that I had learnt at university, however my peers found it an essential resource that they could see how Victoria’s case numbers were trending. This project also furthered my Linux skills, as I wrote a GitHub actions &lt;a href=&quot;https://github.com/sjsteer/COVID-19-VICTORIA/blob/master/.github/workflows/update.yml&quot;&gt;script&lt;/a&gt; to deploy a server daily to generate new plots.&lt;/p&gt;

&lt;p&gt;Here is an example of the daily plot produced:
&lt;img src=&quot;https://raw.githubusercontent.com/sjsteer/COVID-19-VICTORIA/master/victorian_covid_plot.png&quot; alt=&quot;Example Plot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The open-source project can be accessed &lt;a href=&quot;https://github.com/sjsteer/COVID-19-VICTORIA&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name>Shayne Steer</name><email>shaynesteer@gmail.com</email></author><category term="projects" /><summary type="html">Below is a project that I have been working on to plot various datapoints from the Victorian COVID-19.</summary></entry><entry><title type="html">XKCD Bot</title><link href="/projects/2020/08/20/xkcd-bot.html" rel="alternate" type="text/html" title="XKCD Bot" /><published>2020-08-20T12:00:00+00:00</published><updated>2020-08-20T12:00:00+00:00</updated><id>/projects/2020/08/20/xkcd-bot</id><content type="html" xml:base="/projects/2020/08/20/xkcd-bot.html">&lt;p&gt;A chatbot using &lt;a href=&quot;https://github.com/Rapptz/discord.py&quot;&gt;Discord.py&lt;/a&gt; and the &lt;a href=&quot;https://xkcd.com/json.html&quot;&gt;XKCD JSON interface&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/../xkcd-bot-demo.jpg&quot; height=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This project allows Discord server admins to invite the bot to their server and request XKCD comics. I wrote this project as a daily user of Discord and a consumer of XKCD comics. I enjoyed working on this project as it allowed me to familiarize myself with the Discord bot API, and how to scrape data from the web - both important skills for a data scientist.&lt;/p&gt;

&lt;p&gt;One problem I encountered was repl.it closing active repos within 5 minutes of activity, however this was overcome by using Flask to deploy a web server and querying it using &lt;a href=&quot;https://uptimerobot.com/&quot;&gt;UptimeRobot&lt;/a&gt;. A guide I found useful is located &lt;a href=&quot;https://www.codementor.io/@garethdwyer building-a-discord-bot-with-python-and-repl-it-miblcwejz&quot;&gt;here&lt;/a&gt; which was a great introduction to Discord.py and repl.it.&lt;/p&gt;

&lt;p&gt;If you are interested in playing with XKCD-Bot, you may add it to your server &lt;a href=&quot;https://discord.com/oauth2/authorize?client_id=742180630120366162&amp;amp;permissions=83968&amp;amp;scope=bot&quot;&gt;here&lt;/a&gt; and view the &lt;a href=&quot;https://github.com/sjsteer/XKCD-Bot&quot;&gt;source code&lt;/a&gt;.&lt;/p&gt;</content><author><name>Shayne Steer</name><email>shaynesteer@gmail.com</email></author><category term="projects" /><summary type="html">A chatbot using Discord.py and the XKCD JSON interface.</summary></entry></feed>